pipeline {
    agent any
    options {
        disableConcurrentBuilds()
    }
    parameters{
        string(
            name: 'BRANCH_NAME',
            defaultValue: 'cicd-test',
            description: 'Specify which branch for the repo'
        )
        string(
            defaultValue: 'Pangu/releases_prebuild/R8-RC6/D6081_qnx_z8084-c2v0-d_entry_MB_R8-RC6.tar.gz',
            description: 'jfrog path for dupkg',
            name: 'DUPKG_PATH',
            trim: true
        )
        string(
            defaultValue: '99.0.0', description: 'Which Version to use?', name: 'SW_VERSION', trim: true
        )
        choice(
            name: 'VARIANT',
            choices: ['0','1','2','3'],
            description: 'Select the type of variant that corresponds to the provided orin flashware'
        )
        choice(
            name: 'OUTPUT',
            choices: ['yes','no'],
            description: 'Select the type of variant that corresponds to the provided orin flashware'
        )
        choice(
            name: 'COMPRESSION',
            choices: ['no','yes'],
            description: 'Select the type of variant that corresponds to the provided orin flashware'
        )
        string(
            defaultValue: '0009020798',
            description: 'The partnumber of the software (optional). By default will be derived via variant and logical block.',
            name: 'SW_PARTNUMBER',
            trim: true
        )
        string(
            defaultValue: 'LB0_Orin_SW',
            description: 'Select a logical block for generation, eg: LB0_Orin_SW',
            name: 'LOGICAL_BLOCK',
            trim: true
        )
    }
    stages {
        stage("Setup Environment") {
            steps {
                script {              
                    def config = readYaml file: "${env.WORKSPACE}/pipeline-templates/logical-block-variables/prod-variable-tpl.yml"
                    env.artiCredentialId = config.variables.find { it.name == 'artiCredentialId' }.value
                    env.artiServerName = config.variables.find { it.name == 'artiServerName' }.value
                    env.artiServerUrl = config.variables.find { it.name == 'artiServerUrl' }.value
                    env.artiServerId = config.variables.find { it.name == 'artiServerId' }.value
                }
            }
        }
        stage("Clean Workspace") {
            steps {
                echo "artiCredentialId is: ${env.artiCredentialId}"
            }
        }
    }
}